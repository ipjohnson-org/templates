on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string
      stage:
        required: true
        type: string
      service_account_role:
        required: true
        type: string
    
permissions:
  id-token: write
  contents: read
  packages: read
  
jobs:
  deploy_job:
    name: ${{ inputs.stage }}-${{ inputs.region }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.stage }}-${{ inputs.region }}
    concurrency: 
      group: ${{ github.event.repository.name }}-${{ inputs.stage }}-${{ inputs.region }}
      cancel-in-progress: false
    steps:
    - uses: actions/checkout@v4
    - name: Start docker
      run: docker run -p 8000:8000 amazon/dynamodb-local -jar DynamoDBLocal.jar -sharedDb &
    - name: Sleep 5 seconds
      run: sleep 5s
      shell: bash
    - name: Setup dotnet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        source-url: https://nuget.pkg.github.com/ipjohnson-org/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: install dot lambda
      run: dotnet tool install --global Amazon.Lambda.Tools
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build
    - name: Test with the dotnet CLI
      run: dotnet test
    - name: Assume role using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.service_account_role }}
        aws-region: ${{ inputs.region }}    
    - name: install cdk
      run: npm install -g aws-cdk
    - name: build cdk app
      working-directory: src/${{ github.event.repository.name }}.CdkDeployment/
      run: cdk deploy -c stage=${{ inputs.stage }} -c region=${{ inputs.region }} --all
